" 显示行D
set number

" 显示标尺
set ruler

" 历史纪录
set history=1000

" 输入的命令显示出来，看的清楚些
set showcmd

set showmode

" 启动显示状态行1，总是显示状态行2
set laststatus=2

" 状态行显示的内容
" disable it because using vimairline
"set statusline=[DIRS=%F%m%r%h%w]\ 
"set statusline+=[FORMAT=%{&ff}]\ 
"set statusline+=[TYPE=%Y]\ 
"set statusline+=[POS=%l,%v]\ 
"set statusline+=[PERCENT=%p%%]\ 
"set statusline+=%{strftime(\"%d/%m/%y\")}\ 

" 语法高亮显示
syntax on
set fileencodings=utf-8,gb2312,gbk,cp936,latin-1
set fileencoding=utf-8
set termencoding=utf-8
set fileformat=unix
set encoding=utf-8

" 配色方案
colorscheme gruvbox
set background=dark

" 指定配色方案是256色
set t_Co=256

" 
set wildmenu

" 去掉有关vi一致性模式，避免以前版本的一些bug和局限，解决backspace不能使用的问题
set nocompatible
set backspace=indent,eol,start
set backspace=2

" 启用自动对齐功能，把上一行的对齐格式应用到下一行
set autoindent

" 依据上面的格式，智能的选择对齐方式，对于类似C语言编写很有用处
set smartindent

" vim禁用自动备份
set nobackup
set nowritebackup
set noswapfile

" 启用撤销
set undodir=~/.vim/undodir
if !isdirectory(&undodir)
    call mkdir(&undodir, 'p', 0700)
endif

" 用空格代替tab
set expandtab

" 设置显示制表符的空格字符个数,改进tab缩进值，默认为8，现改为4
set tabstop=4

" 统一缩进为4，方便在开启了et后使用退格(backspace)键，每次退格将删除X个空格
set softtabstop=4

" 设定自动缩进为4个字符，程序中自动缩进所使用的空白长度
set shiftwidth=4

" 显示匹配的括号
set showmatch

" 文件缩进及tab个数
autocmd FileType html,python,vim,javascript setl shiftwidth=4 tabstop=4
autocmd FileType java setl shiftwidth=4 tabstop=4

autocmd FileType c,cpp setlocal expandtab shiftwidth=4 softtabstop=4 tabstop=4 cinoptions=:0,g0,(0,w1
autocmd FileType json  setlocal expandtab shiftwidth=2 softtabstop=2
autocmd FileType vim   setlocal expandtab shiftwidth=2 softtabstop=2

" 高亮搜索的字符串
set hlsearch

" 检测文件的类型
filetype on
filetype plugin on
filetype indent on

" C风格缩进
set cindent
set completeopt=longest,menu

" 去掉输入错误提示声音
set noeb

" 自动保存
set autowrite

" 突出显示当前行 
set cursorline

" 突出显示当前列
" set cursorcolumn

" 支持鼠标操作
if has('mouse')
  if has('gui_running') || (&term =~'xterm' && !has('mac'))
    set mouse=a
  else
    set mouse=nvi
  endif
endif

"设置光标样式为竖线vertical bar
" Change cursor shape between insert and normal mode in iTerm2.app
if $TERM_PROGRAM=~"iTerm"
let &t_SI="\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
let &t_EI="\<Esc>]50;CursorShape=0\x7" " Block in normal mode
endif

" 共享剪贴板
set clipboard+=unnamed

" 文件被改动时自动载入
set autoread

" 插件管理 vim-plug
call plug#begin()
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'valloric/youcompleteme'
call plug#end()

" 启动nerdtree
" autocmd VimEnter * NERDTree

" vim设定airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='base16'

" 按键map
map <F1> : NERDTreeToggle<CR>
map <F2> : tabprevious<CR>
map <F3> : tabnext<CR>
map <F4> : tabclose<CR>

" 设定 timer
set updatetime=200
